package com.rodrigodev.xgen4j_table_generator.test.tableIsGeneratedForErrorsWithNoNumericId.common_code_name_1.common_code_name_2.common_code_name_3_3;

import com.rodrigodev.xgen4j_table_generator.test.tableIsGeneratedForErrorsWithNoNumericId.common_code_name_1.common_code_name_2.CName2Error;

import com.rodrigodev.xgen4j_table_generator.test.TableCreationTestSpecification.TestMessageGeneratorObject1;

import com.rodrigodev.xgen4j_table_generator.test.tableIsGeneratedForErrorsWithNoNumericId.ErrorCode;
import com.rodrigodev.xgen4j_table_generator.test.tableIsGeneratedForErrorsWithNoNumericId.RootNameException;
import com.rodrigodev.xgen4j_table_generator.test.tableIsGeneratedForErrorsWithNoNumericId.RootNameException.ExceptionType;

/**
 * Autogenerated by XGen4J on January 1, 0001.
 */
public abstract class CName3_3Error extends CName2Error {

    public static final ErrorCode CODE = new ErrorCode("common-code-name-3-3", CName2Error.CODE);

    private static String createMessage(TestMessageGeneratorObject1 generator) {
        if(generator == null) throw new NullPointerException("generator");

        return generator.message();
    }

    public static void throwException(TestMessageGeneratorObject1 generator) {
        throw new CName3_3Exception(CODE, createMessage(generator));
    }

    public static void throwException(TestMessageGeneratorObject1 generator, Throwable cause) {
        throw new CName3_3Exception(CODE, createMessage(generator), cause);
    }

    public static void throwException(ExceptionType exceptionType, TestMessageGeneratorObject1 generator) {
        throwExceptionForCommonError(CODE, exceptionType, createMessage(generator));
    }

    public static void throwException(ExceptionType exceptionType, TestMessageGeneratorObject1 generator, Throwable cause) {
        throwExceptionForCommonError(CODE, exceptionType, createMessage(generator), cause);
    }

}
