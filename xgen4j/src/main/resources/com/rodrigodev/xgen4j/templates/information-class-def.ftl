package ${packagePath};

import ${packagePath}.ErrorInfo.CustomMessageGeneratorErrorDescription;
import ${packagePath}.ErrorInfo.PlainTextErrorDescription;

import java.util.*;
import java.util.concurrent.atomic.AtomicBoolean;

/**
 * Autogenerated by XGen4J on ${currentDate}.
 */
public class ${name} {

    private static List<ErrorInfo> errorInfoList;
    private static Map<String, ErrorInfo> idToErrorInfoMap;
    <#if errorCode.hasNumericId>
    private static Map<String, ErrorInfo> numericIdToErrorInfoMap;
    </#if>

    private static final AtomicBoolean loaded = new AtomicBoolean();

    private static void load() {
        if (loaded.compareAndSet(false, true)) {
            errorInfoList = new ArrayList<>();
            idToErrorInfoMap = new HashMap<>();
            <#if errorCode.hasNumericId>
            numericIdToErrorInfoMap = new HashMap<>();
            </#if>

            <#list errors as error>
            errorInfoList.add(new ErrorInfo(
                    ${error.canonicalName}.class,
                    new ExceptionInfo(<#if error.exception.hasType>${error.exception.canonicalName}.TYPE, </#if>${error.exception.canonicalName}.class),
                    ${error.canonicalName}.CODE,
                    <#if error.description??><#if error.description.plainText>
                    new PlainTextErrorDescription("${error.description.content}"),
                    <#else>
                    new CustomMessageGeneratorErrorDescription<>(${error.description.content}),
                    </#if></#if>
                    ${error.common?c}
            ));
            </#list>
            errorInfoList = Collections.unmodifiableList(errorInfoList);

            for (ErrorInfo errorInfo : errorInfoList) {
                idToErrorInfoMap.put(errorInfo.code().id(), errorInfo);
                <#if errorCode.hasNumericId>
                numericIdToErrorInfoMap.put(errorInfo.code().numericId(), errorInfo);
                </#if>
            }

            loaded.set(true);
        }
    }

    public static List<ErrorInfo> list() {
        load();
        return errorInfoList;
    }

    public static ErrorInfo forId(String id) {
        if (id == null) throw new IllegalArgumentException("id");

        load();
        return idToErrorInfoMap.get(id);
    }

    <#if errorCode.hasNumericId>
    public static ErrorInfo forNumericId(String numericId) {
        if (numericId == null) throw new IllegalArgumentException("numericId");

        load();
        return numericIdToErrorInfoMap.get(numericId);
    }
    </#if>
}
