package com.rodrigodev.xgen4j.test.generation_options.java8OptionalClassIsUsedWhenCorrespondingOptionIsSet.java8c1.java8c2.java8c3_2;

import com.rodrigodev.xgen4j.test.generation_options.java8OptionalClassIsUsedWhenCorrespondingOptionIsSet.java8c1.java8c2.Java8C2Error;

import java.lang.String;
import java.lang.Integer;
import com.rodrigodev.xgen4j.test.common.doubles.error.message.TestObject;

import com.rodrigodev.xgen4j.test.generation_options.java8OptionalClassIsUsedWhenCorrespondingOptionIsSet.ErrorCode;
import com.rodrigodev.xgen4j.test.generation_options.java8OptionalClassIsUsedWhenCorrespondingOptionIsSet.Java8RootException;
import com.rodrigodev.xgen4j.test.generation_options.java8OptionalClassIsUsedWhenCorrespondingOptionIsSet.Java8RootException.ExceptionType;

/**
 * Autogenerated by XGen on January 1, 0001.
 */
public abstract class Java8C3_2Error extends Java8C2Error {

    public static final ErrorCode CODE = new ErrorCode("java-8-c-3-2", Java8C2Error.CODE);

    private static String MESSAGE_FORMAT = "{param1: '%s', param2: %d, param3: '%s'}";

    private static String createMessage(String param1, Integer param2, TestObject param3) {
        if(param1 == null) throw new NullPointerException("param1");
        if(param2 == null) throw new NullPointerException("param2");
        if(param3 == null) throw new NullPointerException("param3");

        return String.format(MESSAGE_FORMAT, param1, param2, param3);
    }

    public static void throwException(String param1, Integer param2, TestObject param3) {
        throw new Java8C3_2Exception(createMessage(param1, param2, param3));
    }

    public static void throwException(String param1, Integer param2, TestObject param3, Throwable cause) {
        throw new Java8C3_2Exception(createMessage(param1, param2, param3), cause);
    }

    public static void throwException(ExceptionType exceptionType, String param1, Integer param2, TestObject param3) {
        throwExceptionForCommonError(exceptionType, createMessage(param1, param2, param3));
    }

    public static void throwException(ExceptionType exceptionType, String param1, Integer param2, TestObject param3, Throwable cause) {
        throwExceptionForCommonError(exceptionType, createMessage(param1, param2, param3), cause);
    }

}
